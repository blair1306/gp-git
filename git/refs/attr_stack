<def f='codebrowser/attr.c' l='452' ll='459'/>
<size>40</size>
<doc f='codebrowser/attr.c' l='434'>/*
 * Like info/exclude and .gitignore, the attribute information can
 * come from many places.
 *
 * (1) .gitattribute file of the same directory;
 * (2) .gitattribute file of the parent directory if (1) does not have
 *      any match; this goes recursively upwards, just like .gitignore.
 * (3) $GIT_DIR/info/attributes, which overrides both of the above.
 *
 * In the same file, later entries override the earlier match, so in the
 * global list, we would have entries from info/attributes the earliest
 * (reading the file from top to bottom), .gitattribute of the root
 * directory (again, reading the file from top to bottom) down to the
 * current directory, and then scan the list backwards to find the first match.
 * This is exactly the same as what is_excluded() does in dir.c to deal with
 * .gitignore file and info/excludes file as a fallback.
 */</doc>
<mbr r='attr_stack::prev' o='0' t='struct attr_stack *'/>
<mbr r='attr_stack::origin' o='64' t='char *'/>
<mbr r='attr_stack::originlen' o='128' t='size_t'/>
<mbr r='attr_stack::num_matches' o='192' t='unsigned int'/>
<mbr r='attr_stack::alloc' o='224' t='unsigned int'/>
<mbr r='attr_stack::attrs' o='256' t='struct match_attr **'/>
