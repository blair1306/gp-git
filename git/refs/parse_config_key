<dec f='codebrowser/config.h' l='119' type='int parse_config_key(const char * var, const char * section, const char ** subsection, int * subsection_len, const char ** key)'/>
<doc f='codebrowser/config.h' l='106'>/*
 * Match and parse a config key of the form:
 *
 *   section.(subsection.)?key
 *
 * (i.e., what gets handed to a config_fn_t). The caller provides the section;
 * we return -1 if it does not match, 0 otherwise. The subsection and key
 * out-parameters are filled by the function (and *subsection is NULL if it is
 * missing).
 *
 * If the subsection pointer-to-pointer passed in is NULL, returns 0 only if
 * there is no subsection at all.
 */</doc>
<use f='codebrowser/archive-tar.c' l='377' u='c' c='tar_filter_config'/>
<use f='codebrowser/builtin/help.c' l='234' u='c' c='add_man_viewer_info'/>
<use f='codebrowser/builtin/reflog.c' l='441' u='c' c='reflog_expire_config'/>
<use f='codebrowser/config.c' l='295' u='c' c='git_config_include'/>
<def f='codebrowser/config.c' l='2860' ll='2894' type='int parse_config_key(const char * var, const char * section, const char ** subsection, int * subsection_len, const char ** key)'/>
<use f='codebrowser/convert.c' l='763' u='c' c='read_convert_config'/>
<use f='codebrowser/ll-merge.c' l='246' u='c' c='read_merge_config'/>
<use f='codebrowser/refs.c' l='1151' u='c' c='parse_hide_refs_config'/>
<use f='codebrowser/remote.c' l='335' u='c' c='handle_config'/>
<use f='codebrowser/remote.c' l='350' u='c' c='handle_config'/>
<use f='codebrowser/remote.c' l='367' u='c' c='handle_config'/>
<use f='codebrowser/submodule-config.c' l='196' u='c' c='name_and_item_from_var'/>
<use f='codebrowser/userdiff.c' l='229' u='c' c='userdiff_config'/>
