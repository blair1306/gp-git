<dec f='codebrowser/refs.h' l='602' type='int ref_transaction_commit(struct ref_transaction * transaction, struct strbuf * err)'/>
<doc f='codebrowser/refs.h' l='595'>/*
 * Commit all of the changes that have been queued in transaction, as
 * atomically as possible. On success, return 0 and leave the
 * transaction in &quot;closed&quot; state. On failure, roll back the
 * transaction, write an error message to `err`, and return one of the
 * `TRANSACTION_*` constants
 */</doc>
<use f='codebrowser/branch.c' l='311' u='c' c='create_branch'/>
<use f='codebrowser/builtin/commit.c' l='1789' u='c' c='cmd_commit'/>
<use f='codebrowser/builtin/fetch.c' l='464' u='c' c='s_update_ref'/>
<use f='codebrowser/builtin/receive-pack.c' l='1402' u='c' c='execute_commands_non_atomic'/>
<use f='codebrowser/builtin/receive-pack.c' l='1437' u='c' c='execute_commands_atomic'/>
<use f='codebrowser/builtin/replace.c' l='180' u='c' c='replace_object_oid'/>
<use f='codebrowser/builtin/tag.c' l='549' u='c' c='cmd_tag'/>
<use f='codebrowser/builtin/update-ref.c' l='392' u='c' c='cmd_update_ref'/>
<use f='codebrowser/fast-import.c' l='1782' u='c' c='update_branch'/>
<use f='codebrowser/fast-import.c' l='1827' u='c' c='dump_tags'/>
<use f='codebrowser/refs.c' l='675' u='c' c='refs_delete_ref'/>
<use f='codebrowser/refs.c' l='1012' u='c' c='refs_update_ref'/>
<def f='codebrowser/refs.c' l='1818' ll='1843' type='int ref_transaction_commit(struct ref_transaction * transaction, struct strbuf * err)'/>
<use f='codebrowser/refs/files-backend.c' l='1046' u='c' c='prune_ref'/>
<use f='codebrowser/refs/packed-backend.c' l='776' u='c' c='packed_initial_transaction_commit'/>
<use f='codebrowser/sequencer.c' l='397' u='c' c='fast_forward_to'/>
<use f='codebrowser/walker.c' l='314' u='c' c='walker_fetch'/>
