<dec f='codebrowser/worktree.h' l='28' type='struct worktree ** get_worktrees(unsigned int flags)'/>
<use f='codebrowser/branch.c' l='352' u='c' c='replace_each_worktree_head_symref'/>
<doc f='codebrowser/worktree.h' l='20'>/*
 * Get the worktrees.  The primary worktree will always be the first returned,
 * and linked worktrees will be pointed to by &apos;next&apos; in each subsequent
 * worktree.  No specific ordering is done on the linked worktrees.
 *
 * The caller is responsible for freeing the memory from the returned
 * worktree(s).
 */</doc>
<use f='codebrowser/builtin/branch.c' l='438' u='c' c='reject_rebase_or_bisect_branch'/>
<use f='codebrowser/builtin/worktree.c' l='457' u='c' c='list'/>
<use f='codebrowser/builtin/worktree.c' l='488' u='c' c='lock_worktree'/>
<use f='codebrowser/builtin/worktree.c' l='521' u='c' c='unlock_worktree'/>
<use f='codebrowser/t/helper/test-ref-store.c' l='37' u='c' c='get_store'/>
<def f='codebrowser/worktree.c' l='130' ll='170' type='struct worktree ** get_worktrees(unsigned int flags)'/>
<use f='codebrowser/worktree.c' l='305' u='c' c='find_shared_symref'/>
