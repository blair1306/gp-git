<dec f='codebrowser/string-list.h' l='101' type='struct string_list_item * string_list_append_nodup(struct string_list * list, char * string)'/>
<doc f='codebrowser/string-list.h' l='95'>/*
 * Like string_list_append(), except string is never copied.  When
 * list-&gt;strdup_strings is set, this function can be used to hand
 * ownership of a malloc()ed string to list without making an extra
 * copy.
 */</doc>
<use f='codebrowser/builtin/fetch.c' l='1185' u='c' c='get_remote_group'/>
<use f='codebrowser/builtin/repack.c' l='105' u='c' c='get_non_kept_pack_filenames'/>
<use f='codebrowser/config.c' l='1701' u='c' c='configset_add_value'/>
<use f='codebrowser/connect.c' l='75' u='c' c='parse_one_symref_info'/>
<use f='codebrowser/credential-store.c' l='172' u='c' c='cmd_main'/>
<use f='codebrowser/credential-store.c' l='175' u='c' c='cmd_main'/>
<use f='codebrowser/remote.c' l='865' u='c' c='query_refspecs_multiple'/>
<use f='codebrowser/remote.c' l='1393' u='c' c='prepare_ref_index'/>
<def f='codebrowser/string-list.c' l='208' ll='217' type='struct string_list_item * string_list_append_nodup(struct string_list * list, char * string)'/>
<use f='codebrowser/string-list.c' l='222' u='c' c='string_list_append'/>
<use f='codebrowser/string-list.c' l='286' u='c' c='string_list_split'/>
