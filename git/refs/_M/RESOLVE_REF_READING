<dec f='codebrowser/refs.h' l='57'/>
<doc f='codebrowser/refs.h' l='10'>/*
 * Resolve a reference, recursively following symbolic refererences.
 *
 * Store the referred-to object&apos;s name in sha1 and return the name of
 * the non-symbolic reference that ultimately pointed at it.  The
 * return value, if not NULL, is a pointer into either a static buffer
 * or the input ref.
 *
 * If the reference cannot be resolved to an object, the behavior
 * depends on the RESOLVE_REF_READING flag:
 *
 * - If RESOLVE_REF_READING is set, return NULL.
 *
 * - If RESOLVE_REF_READING is not set, clear sha1 and return the name of
 *   the last reference name in the chain, which will either be a non-symbolic
 *   reference or an undefined reference.  If this is a prelude to
 *   &quot;writing&quot; to the ref, the return value is the name of the ref
 *   that will actually be created or changed.
 *
 * If the RESOLVE_REF_NO_RECURSE flag is passed, only resolves one
 * level of symbolic reference.  The value stored in sha1 for a symbolic
 * reference will always be null_sha1 in this case, and the return
 * value is the reference that the symref refers to directly.
 *
 * If flags is non-NULL, set the value that it points to the
 * combination of REF_ISPACKED (if the reference was found among the
 * packed references), REF_ISSYMREF (if the initial reference was a
 * symbolic reference), REF_BAD_NAME (if the reference name is ill
 * formed --- see RESOLVE_REF_ALLOW_BAD_NAME below), and REF_ISBROKEN
 * (if the ref is malformed or has a bad name). See refs.h for more detail
 * on each flag.
 *
 * If ref is not a properly-formatted, normalized reference, return
 * NULL.  If more than MAXDEPTH recursive symbolic lookups are needed,
 * give up and return NULL.
 *
 * RESOLVE_REF_ALLOW_BAD_NAME allows resolving refs even when their
 * name is invalid according to git-check-ref-format(1).  If the name
 * is bad then the value stored in sha1 will be null_sha1 and the two
 * flags REF_ISBROKEN and REF_BAD_NAME will be set.
 *
 * Even with RESOLVE_REF_ALLOW_BAD_NAME, names that escape the refs/
 * directory and do not consist of all caps and underscores cannot be
 * resolved. The function returns NULL for such ref names.
 * Caps and underscores refers to the special refs, such as HEAD,
 * FETCH_HEAD and friends, that all live outside of the refs/ directory.
 */</doc>
<use f='codebrowser/blame.c' l='169' u='c'/>
<use f='codebrowser/blame.c' l='1692' u='c'/>
<use f='codebrowser/builtin/branch.c' l='126' u='c'/>
<use f='codebrowser/builtin/branch.c' l='240' u='c'/>
<use f='codebrowser/builtin/clone.c' l='717' u='c'/>
<use f='codebrowser/builtin/fmt-merge-msg.c' l='606' u='c'/>
<use f='codebrowser/builtin/log.c' l='1665' u='c'/>
<use f='codebrowser/builtin/remote.c' l='567' u='c'/>
<use f='codebrowser/builtin/remote.c' l='692' u='c'/>
<use f='codebrowser/builtin/show-branch.c' l='708' u='c'/>
<use f='codebrowser/builtin/show-branch.c' l='777' u='c'/>
<use f='codebrowser/bundle.c' l='336' u='c'/>
<use f='codebrowser/http-backend.c' l='490' u='c'/>
<use f='codebrowser/ref-filter.c' l='300' u='c'/>
<use f='codebrowser/ref-filter.c' l='1321' u='c'/>
<use f='codebrowser/reflog-walk.c' l='67' u='c'/>
<use f='codebrowser/refs.c' l='237' u='c'/>
<use f='codebrowser/refs.c' l='243' u='c'/>
<use f='codebrowser/refs.c' l='385' u='c'/>
<use f='codebrowser/refs.c' l='502' u='c'/>
<use f='codebrowser/refs.c' l='533' u='c'/>
<use f='codebrowser/refs.c' l='1263' u='c'/>
<use f='codebrowser/refs.c' l='1450' u='c'/>
<use f='codebrowser/refs/files-backend.c' l='200' u='c'/>
<use f='codebrowser/refs/files-backend.c' l='675' u='c'/>
<use f='codebrowser/refs/files-backend.c' l='831' u='c'/>
<use f='codebrowser/refs/files-backend.c' l='896' u='c'/>
<use f='codebrowser/refs/files-backend.c' l='1284' u='c'/>
<use f='codebrowser/refs/files-backend.c' l='1320' u='c'/>
<use f='codebrowser/refs/files-backend.c' l='1680' u='c'/>
<use f='codebrowser/refs/files-backend.c' l='1727' u='c'/>
<use f='codebrowser/remote.c' l='1110' u='c'/>
<use f='codebrowser/remote.c' l='1173' u='c'/>
<use f='codebrowser/sequencer.c' l='491' u='c'/>
<use f='codebrowser/transport-helper.c' l='946' u='c'/>
<use f='codebrowser/transport.c' l='46' u='c'/>
<use f='codebrowser/transport.c' l='479' u='c'/>
<use f='codebrowser/worktree.c' l='33' u='c'/>
